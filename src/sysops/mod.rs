// •════════··══════════════════·═══════════════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
// ✨λ sysops::mod  ι✧21․12․25✦16․50․24․  🌎η ✧22․12․29․✧22․11․12․✧22․08․22․✧22․08․19․✧22․08․16․✧22․08․07․✧22․08․05․✧22․07․04․✧22․06․22․
pub mod s1_metrics;
use mylib::q1_lex::{get_cmd_code};
// use mylib;

// •════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
//λ unit tests -- REALLY HARD TO TEST WITHOUT `use super::*;`

// •════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•


/// check int-tests the active system as a whole
pub fn check() -> Result<(), String> {

    let my_location = "sysops::check";
    match s1_metrics::check() {                                     // checking metrics calculations 
        Err(ee) => Err(format!("{ee}⟸ {my_location}")),
        _ => Ok(()),
    }
}


// •════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
///λ run() is the system's exec fn for sysops module; 
pub fn run() -> Result<(), String> {

    print!("\n🎡𐡋 running sysops::mod::run() \n");
    get_cmd_code();
    
    let my_location = "s1_exec::run";
    match s1_metrics::run() {
        Err(ee) => Err(format!("{ee}⟸ {my_location}")),
        _ => Ok(()),
    }
}


//λ The Code Pit
/*
•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
// •════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
///λ run() is the system's exec fn for sysopss module; 
pub fn run() -> Result<(), String> {

    let my_location = "s1_exec::run";
    let lex1 = Lex::new();
    print!("lex1: \n{lex1}");
    
    match map_iter_2() {
        Err(ee) => Err(format!("{ee}⟸ {my_location}")),
        _ => Ok(()),
    }
}


•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
λ Crates § Modules

mod sysops_exec;
mod a84_re_multiline;               use a84_re_multiline::{check};
mod a83_regex_basics;               use a83_regex_basics::{check};
mod a82_string_methods;             use a82_string_methods::{check};


•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
mod sysops_exec;                    use sysops_exec::{check};
•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
•═══════════··══════════════════·═══════════════════··══════════════════·═══════════════════··═══════════•
*/
// End Of The Code Pit

